@page "/"
@inject HttpClient Http
@using RaceList.Models

<PageTitle>NASCAR Schedule</PageTitle>

<h1 class="text-center fw-bold">NASCAR Schedule</h1>
<h3 class="text-center fw-bold">@Year</h3>

<div class="">
    <div class="btn-group mx-4 " role="group">
        <button @onclick="() => FetchYear(true)" type="button" class="btn year-buttons">Previous Year</button>
        @if (Year < DateTime.Now.Year)
        {
            <button @onclick="FetchCurrentYear" type="button" class="btn year-buttons">@DateTime.Now.Year</button>
            <button @onclick="() => FetchYear(false)" type="button" class="btn year-buttons">Next Year</button>
        }
    </div>
</div>
@if (schedule == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="schedule">
        <div class="series-table">
            <Series SeriesName="Cup" RaceList="schedule.Series1" />
        </div>

        <div class="series-table">
            <Series SeriesName="Xfinity" RaceList="schedule.Series2" />
        </div>

        <div class="series-table">
            <Series SeriesName="Trucks" RaceList="schedule.Series3" />
        </div>
    </div>
}

@code {
    private RaceListBasic? schedule;
    private int Year = DateTime.Now.Year;

    protected override async Task OnInitializedAsync()
    {
        schedule = await Http.GetFromJsonAsync<RaceListBasic>($"https://cf.nascar.com/cacher/{Year}/race_list_basic.json");
    }

    private async Task FetchYear(bool isPrevYear)
    {
        if (isPrevYear)
        {
            Year -= 1;
        } else
        {
            Year += 1;
        }
        await FetchList();
    }

    private async Task FetchCurrentYear()
    {
        Year = DateTime.Now.Year; 
        await FetchList();
    }

    private async Task FetchList()
    {
        schedule = await Http.GetFromJsonAsync<RaceListBasic>($"https://cf.nascar.com/cacher/{Year}/race_list_basic.json");
    }
}
